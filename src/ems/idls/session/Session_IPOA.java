package ems.idls.session;


/**
* ems/idls/session/Session_IPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from session.idl
* Tuesday, January 15, 2015 5:02:24 PM CST
*/


/**
   * <p> The Session_I interface provides capabilities to manage the
   * client-server connection.
   * Its main purpose is to enable either a client or server to detect the 
   * loss of communication with the associated party.</p>
   *
   * <p>For a single communication session between an NMS and an EMS, there are
   * two Session_I objects.  One is maintained on the NMS; the other one is maintained
   * on the EMS.  The Session_I object maintained on the EMS is actually an EmsSession_I, while
   * the Session_I object maintained on the NMS is actually an NmsSession_I
   * (both inherit from Session_I).</p>
   *
   * <p>Each Session_I object is responsible to "ping" the other Session_I object
   * periodically to detect communication failures.  Exactly when this is done is up to
   * the implementation.</p>
   *
   * <p>When a Session_I object detects a communication failure, or when the endSession
   * operation is called on it, all resources allocated with that communication session
   * must be freed and the Session_I object must be deleted.</p>
   **/
public abstract class Session_IPOA extends org.omg.PortableServer.Servant
 implements ems.idls.session.Session_IOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_associatedSession", new java.lang.Integer (0));
    _methods.put ("ping", new java.lang.Integer (1));
    _methods.put ("endSession", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /**
     * <p>This attribute contains a reference to the Session_I on the other side (NMS/EMS)
     * to which the object is associated.
     * This attribute can be checked to make sure the NmsSession_I/EmsSession_I association is
     * still valid (in particular in case of communication failures).</p>
     **/
       case 0:  // session/Session_I/_get_associatedSession
       {
         ems.idls.session.Session_I $result = null;
         $result = this.associatedSession ();
         out = $rh.createReply();
         ems.idls.session.Session_IHelper.write (out, $result);
         break;
       }


  /**
     * <p> Allows for the detection of loss of communication.
     * It is implementation specific to differenciate intermittent 
     * problems from loss of connection.</p>
     **/
       case 1:  // session/Session_I/ping
       {
         this.ping ();
         out = $rh.createReply();
         break;
       }


  /**
     * <p> Allows for a controlled disconnect between parties.
     * All resources allocated for the session are deleted by operation.</p>
     **/
       case 2:  // session/Session_I/endSession
       {
         this.endSession ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:mtnm.tmforum.org/session/Session_I:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Session_I _this() 
  {
    return Session_IHelper.narrow(
    super._this_object());
  }

  public Session_I _this(org.omg.CORBA.ORB orb) 
  {
    return Session_IHelper.narrow(
    super._this_object(orb));
  }


} // class Session_IPOA
