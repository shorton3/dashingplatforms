package ems.idls.platformConfig;


/**
* ems/idls/platformConfig/_platformConfig_IStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from platformConfig.idl
* Tuesday, January 15, 2015 5:02:24 PM CST
*/


/**
    * Command/Method interface
    */
public class _platformConfig_IStub extends org.omg.CORBA.portable.ObjectImpl implements ems.idls.platformConfig.platformConfig_I
{


  /**
         * Retrieve all of the subsystem log levels
         */
  public void getLogLevels (ems.idls.platformConfig.platformConfigLogLevelsHolder logLevels)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLogLevels", true);
                $in = _invoke ($out);
                logLevels.value = ems.idls.platformConfig.platformConfigLogLevelsHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getLogLevels (logLevels        );
            } finally {
                _releaseReply ($in);
            }
  } // getLogLevels


  /**
         * Set a specified log level 
         */
  public void setLogLevel (ems.idls.platformConfig.platformConfigLogLevel logLevel)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setLogLevel", true);
                ems.idls.platformConfig.platformConfigLogLevelHelper.write ($out, logLevel);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setLogLevel (logLevel        );
            } finally {
                _releaseReply ($in);
            }
  } // setLogLevel


  /**
         * Set all of the log levels
         */
  public void setLogLevels (ems.idls.platformConfig.platformConfigLogLevel[] logLevels)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setLogLevels", true);
                ems.idls.platformConfig.platformConfigLogLevelsHelper.write ($out, logLevels);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setLogLevels (logLevels        );
            } finally {
                _releaseReply ($in);
            }
  } // setLogLevels

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:platformConfig/platformConfig_I:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _platformConfig_IStub
