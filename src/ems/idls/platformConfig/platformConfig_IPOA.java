package ems.idls.platformConfig;


/**
* ems/idls/platformConfig/platformConfig_IPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from platformConfig.idl
* Tuesday, January 15, 2015 5:02:24 PM CST
*/


/**
    * Command/Method interface
    */
public abstract class platformConfig_IPOA extends org.omg.PortableServer.Servant
 implements ems.idls.platformConfig.platformConfig_IOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getLogLevels", new java.lang.Integer (0));
    _methods.put ("setLogLevel", new java.lang.Integer (1));
    _methods.put ("setLogLevels", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /**
         * Retrieve all of the subsystem log levels
         */
       case 0:  // platformConfig/platformConfig_I/getLogLevels
       {
         ems.idls.platformConfig.platformConfigLogLevelsHolder logLevels = new ems.idls.platformConfig.platformConfigLogLevelsHolder ();
         this.getLogLevels (logLevels);
         out = $rh.createReply();
         ems.idls.platformConfig.platformConfigLogLevelsHelper.write (out, logLevels.value);
         break;
       }


  /**
         * Set a specified log level 
         */
       case 1:  // platformConfig/platformConfig_I/setLogLevel
       {
         ems.idls.platformConfig.platformConfigLogLevel logLevel = ems.idls.platformConfig.platformConfigLogLevelHelper.read (in);
         this.setLogLevel (logLevel);
         out = $rh.createReply();
         break;
       }


  /**
         * Set all of the log levels
         */
       case 2:  // platformConfig/platformConfig_I/setLogLevels
       {
         ems.idls.platformConfig.platformConfigLogLevel logLevels[] = ems.idls.platformConfig.platformConfigLogLevelsHelper.read (in);
         this.setLogLevels (logLevels);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:platformConfig/platformConfig_I:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public platformConfig_I _this() 
  {
    return platformConfig_IHelper.narrow(
    super._this_object());
  }

  public platformConfig_I _this(org.omg.CORBA.ORB orb) 
  {
    return platformConfig_IHelper.narrow(
    super._this_object(orb));
  }


} // class platformConfig_IPOA
