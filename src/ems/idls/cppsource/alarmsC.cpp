// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_codegen.cpp:381


#include "alarmsC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Enum_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "tao/AnyTypeCode/Any_Basic_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "alarmsC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:73

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  
  // TAO_IDL - Generated from
  // ../../../TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:620

#if !defined (_ALARMS_ALARMNOTIFICATIONSEQUENCE__ARG_TRAITS_)
#define _ALARMS_ALARMNOTIFICATIONSEQUENCE__ARG_TRAITS_
  
  template<>
  class Arg_Traits<alarms::AlarmNotificationSequence>
    : public
        Var_Size_Arg_Traits_T<
            alarms::AlarmNotificationSequence,
            TAO::Any_Insert_Policy_Stream <alarms::AlarmNotificationSequence>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // ../../../TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:620

#if !defined (_ALARMS_ALARMINFORMATIONSEQUENCE__ARG_TRAITS_)
#define _ALARMS_ALARMINFORMATIONSEQUENCE__ARG_TRAITS_
  
  template<>
  class Arg_Traits<alarms::AlarmInformationSequence>
    : public
        Var_Size_Arg_Traits_T<
            alarms::AlarmInformationSequence,
            TAO::Any_Insert_Policy_Stream <alarms::AlarmInformationSequence>
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_NEIDType (
    ::CORBA::tk_alias,
    "IDL:alarms/NEIDType:1.0",
    "NEIDType",
    &CORBA::_tc_string);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_NEIDType =
    &_tao_tc_alarms_NEIDType;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_AlarmCode (
    ::CORBA::tk_alias,
    "IDL:alarms/AlarmCode:1.0",
    "AlarmCode",
    &CORBA::_tc_long);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_AlarmCode =
    &_tao_tc_alarms_AlarmCode;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_ManagedObject (
    ::CORBA::tk_alias,
    "IDL:alarms/ManagedObject:1.0",
    "ManagedObject",
    &CORBA::_tc_long);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_ManagedObject =
    &_tao_tc_alarms_ManagedObject;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_ManagedObjectInstance (
    ::CORBA::tk_alias,
    "IDL:alarms/ManagedObjectInstance:1.0",
    "ManagedObjectInstance",
    &CORBA::_tc_longlong);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_ManagedObjectInstance =
    &_tao_tc_alarms_ManagedObjectInstance;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/enum_typecode.cpp:31
static char const * const _tao_enumerators_alarms_Severity[] =
  {
    "CRITICAL",
    "MAJOR",
    "MINOR",
    "WARNING",
    "CLEAR"
    
  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_alarms_Severity (
    "IDL:alarms/Severity:1.0",
    "Severity",
    _tao_enumerators_alarms_Severity,
    5);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_Severity =
    &_tao_tc_alarms_Severity;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_TimeStamp (
    ::CORBA::tk_alias,
    "IDL:alarms/TimeStamp:1.0",
    "TimeStamp",
    &CORBA::_tc_string);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_TimeStamp =
    &_tao_tc_alarms_TimeStamp;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_Acknowledgement (
    ::CORBA::tk_alias,
    "IDL:alarms/Acknowledgement:1.0",
    "Acknowledgement",
    &CORBA::_tc_string);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_Acknowledgement =
    &_tao_tc_alarms_Acknowledgement;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_alarms_AlarmNotification[] =
      {
        { "neid", &alarms::_tc_NEIDType },
        { "code", &alarms::_tc_AlarmCode },
        { "mObject", &alarms::_tc_ManagedObject },
        { "mObjectInstance", &alarms::_tc_ManagedObjectInstance },
        { "sev", &alarms::_tc_Severity },
        { "tStamp", &alarms::_tc_TimeStamp },
        { "ack", &alarms::_tc_Acknowledgement }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_alarms_AlarmNotification (
  ::CORBA::tk_struct,
  "IDL:alarms/AlarmNotification:1.0",
  "AlarmNotification",
  _tao_fields_alarms_AlarmNotification,
  7);

namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_AlarmNotification =
    &_tao_tc_alarms_AlarmNotification;
}



// TAO_IDL - Generated from 
// ../../../TAO/TAO_IDL/be/be_visitor_structure/structure_cs.cpp:66

void 
alarms::AlarmNotification::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  AlarmNotification *_tao_tmp_pointer =
    static_cast<AlarmNotification *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from 
// ../../../TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_ALARMS_ALARMNOTIFICATIONSEQUENCE_CS_)
#define _ALARMS_ALARMNOTIFICATIONSEQUENCE_CS_

alarms::AlarmNotificationSequence::AlarmNotificationSequence (void)
{}

alarms::AlarmNotificationSequence::AlarmNotificationSequence (
    ::CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        AlarmNotification
      >
    (max)
{}

alarms::AlarmNotificationSequence::AlarmNotificationSequence (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    alarms::AlarmNotification * buffer,
    ::CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        AlarmNotification
      >
    (max, length, buffer, release)
{}

alarms::AlarmNotificationSequence::AlarmNotificationSequence (
    const AlarmNotificationSequence &seq
  )
  : TAO::unbounded_value_sequence<
        AlarmNotification
      >
    (seq)
{}

alarms::AlarmNotificationSequence::~AlarmNotificationSequence (void)
{}

void alarms::AlarmNotificationSequence::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  AlarmNotificationSequence * _tao_tmp_pointer =
    static_cast<AlarmNotificationSequence *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:516


#ifndef _TAO_TYPECODE_alarms_AlarmNotificationSequence_GUARD
#define _TAO_TYPECODE_alarms_AlarmNotificationSequence_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        alarms_AlarmNotificationSequence_0 (
          ::CORBA::tk_sequence,
          &alarms::_tc_AlarmNotification,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_alarms_AlarmNotificationSequence_0 =
        &alarms_AlarmNotificationSequence_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_alarms_AlarmNotificationSequence_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_AlarmNotificationSequence (
    ::CORBA::tk_alias,
    "IDL:alarms/AlarmNotificationSequence:1.0",
    "AlarmNotificationSequence",
    &TAO::TypeCode::tc_alarms_AlarmNotificationSequence_0);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_AlarmNotificationSequence =
    &_tao_tc_alarms_AlarmNotificationSequence;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/enum_typecode.cpp:31
static char const * const _tao_enumerators_alarms_AlarmCategory[] =
  {
    "COMMUNICATIONS_ALARM",
    "QUALITY_OF_SERVICE_ALARM",
    "PROCESSING_ERROR_ALARM",
    "EQUIPMENT_ALARM",
    "ENVIRONMENTAL_ALARM"
    
  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_alarms_AlarmCategory (
    "IDL:alarms/AlarmCategory:1.0",
    "AlarmCategory",
    _tao_enumerators_alarms_AlarmCategory,
    5);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_AlarmCategory =
    &_tao_tc_alarms_AlarmCategory;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_HighWaterMark (
    ::CORBA::tk_alias,
    "IDL:alarms/HighWaterMark:1.0",
    "HighWaterMark",
    &CORBA::_tc_longlong);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_HighWaterMark =
    &_tao_tc_alarms_HighWaterMark;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_LowWaterMark (
    ::CORBA::tk_alias,
    "IDL:alarms/LowWaterMark:1.0",
    "LowWaterMark",
    &CORBA::_tc_longlong);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_LowWaterMark =
    &_tao_tc_alarms_LowWaterMark;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_IsAutoClearing (
    ::CORBA::tk_alias,
    "IDL:alarms/IsAutoClearing:1.0",
    "IsAutoClearing",
    &CORBA::_tc_boolean);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_IsAutoClearing =
    &_tao_tc_alarms_IsAutoClearing;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_IsFilterEnabled (
    ::CORBA::tk_alias,
    "IDL:alarms/IsFilterEnabled:1.0",
    "IsFilterEnabled",
    &CORBA::_tc_boolean);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_IsFilterEnabled =
    &_tao_tc_alarms_IsFilterEnabled;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_Description (
    ::CORBA::tk_alias,
    "IDL:alarms/Description:1.0",
    "Description",
    &CORBA::_tc_string);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_Description =
    &_tao_tc_alarms_Description;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_Resolution (
    ::CORBA::tk_alias,
    "IDL:alarms/Resolution:1.0",
    "Resolution",
    &CORBA::_tc_string);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_Resolution =
    &_tao_tc_alarms_Resolution;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_alarms_AlarmInformation[] =
      {
        { "code", &alarms::_tc_AlarmCode },
        { "aCategory", &alarms::_tc_AlarmCategory },
        { "hWaterMark", &alarms::_tc_HighWaterMark },
        { "lWaterMark", &alarms::_tc_LowWaterMark },
        { "sev", &alarms::_tc_Severity },
        { "autoClearing", &alarms::_tc_IsAutoClearing },
        { "filterEnabled", &alarms::_tc_IsFilterEnabled },
        { "desc", &alarms::_tc_Description },
        { "res", &alarms::_tc_Resolution }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_alarms_AlarmInformation (
  ::CORBA::tk_struct,
  "IDL:alarms/AlarmInformation:1.0",
  "AlarmInformation",
  _tao_fields_alarms_AlarmInformation,
  9);

namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_AlarmInformation =
    &_tao_tc_alarms_AlarmInformation;
}



// TAO_IDL - Generated from 
// ../../../TAO/TAO_IDL/be/be_visitor_structure/structure_cs.cpp:66

void 
alarms::AlarmInformation::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  AlarmInformation *_tao_tmp_pointer =
    static_cast<AlarmInformation *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from 
// ../../../TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_ALARMS_ALARMINFORMATIONSEQUENCE_CS_)
#define _ALARMS_ALARMINFORMATIONSEQUENCE_CS_

alarms::AlarmInformationSequence::AlarmInformationSequence (void)
{}

alarms::AlarmInformationSequence::AlarmInformationSequence (
    ::CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        AlarmInformation
      >
    (max)
{}

alarms::AlarmInformationSequence::AlarmInformationSequence (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    alarms::AlarmInformation * buffer,
    ::CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        AlarmInformation
      >
    (max, length, buffer, release)
{}

alarms::AlarmInformationSequence::AlarmInformationSequence (
    const AlarmInformationSequence &seq
  )
  : TAO::unbounded_value_sequence<
        AlarmInformation
      >
    (seq)
{}

alarms::AlarmInformationSequence::~AlarmInformationSequence (void)
{}

void alarms::AlarmInformationSequence::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  AlarmInformationSequence * _tao_tmp_pointer =
    static_cast<AlarmInformationSequence *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:516


#ifndef _TAO_TYPECODE_alarms_AlarmInformationSequence_GUARD
#define _TAO_TYPECODE_alarms_AlarmInformationSequence_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        alarms_AlarmInformationSequence_0 (
          ::CORBA::tk_sequence,
          &alarms::_tc_AlarmInformation,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_alarms_AlarmInformationSequence_0 =
        &alarms_AlarmInformationSequence_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_alarms_AlarmInformationSequence_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_alarms_AlarmInformationSequence (
    ::CORBA::tk_alias,
    "IDL:alarms/AlarmInformationSequence:1.0",
    "AlarmInformationSequence",
    &TAO::TypeCode::tc_alarms_AlarmInformationSequence_0);
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_AlarmInformationSequence =
    &_tao_tc_alarms_AlarmInformationSequence;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:60

// Traits specializations for alarms::alarmInterface.

alarms::alarmInterface_ptr
TAO::Objref_Traits<alarms::alarmInterface>::duplicate (
    alarms::alarmInterface_ptr p)
{
  return alarms::alarmInterface::_duplicate (p);
}

void
TAO::Objref_Traits<alarms::alarmInterface>::release (
    alarms::alarmInterface_ptr p)
{
  ::CORBA::release (p);
}

alarms::alarmInterface_ptr
TAO::Objref_Traits<alarms::alarmInterface>::nil (void)
{
  return alarms::alarmInterface::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<alarms::alarmInterface>::marshal (
    const alarms::alarmInterface_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*alarms__TAO_alarmInterface_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:78

void alarms::alarmInterface::getOutstandingAlarms (
    ::alarms::AlarmNotificationSequence_out outstandingAlarms)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_alarmInterface_Proxy_Broker_ == 0)
    {
      alarms_alarmInterface_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::alarms::AlarmNotificationSequence>::out_arg_val _tao_outstandingAlarms (outstandingAlarms);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_outstandingAlarms
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "getOutstandingAlarms",
      20,
      this->the_TAO_alarmInterface_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:78

void alarms::alarmInterface::getAlarmInventory (
    ::alarms::AlarmInformationSequence_out alarmInventory)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_alarmInterface_Proxy_Broker_ == 0)
    {
      alarms_alarmInterface_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::alarms::AlarmInformationSequence>::out_arg_val _tao_alarmInventory (alarmInventory);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_alarmInventory
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "getAlarmInventory",
      17,
      this->the_TAO_alarmInterface_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
}

alarms::alarmInterface::alarmInterface (void)
 : the_TAO_alarmInterface_Proxy_Broker_ (0)
{
  this->alarms_alarmInterface_setup_collocation ();
}

void
alarms::alarmInterface::alarms_alarmInterface_setup_collocation ()
{
  if (::alarms__TAO_alarmInterface_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_alarmInterface_Proxy_Broker_ =
        ::alarms__TAO_alarmInterface_Proxy_Broker_Factory_function_pointer (this);
    }
}

alarms::alarmInterface::~alarmInterface (void)
{}

void 
alarms::alarmInterface::_tao_any_destructor (void *_tao_void_pointer)
{
  alarmInterface *_tao_tmp_pointer =
    static_cast<alarmInterface *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

alarms::alarmInterface_ptr
alarms::alarmInterface::_narrow (
    ::CORBA::Object_ptr _tao_objref
  )
{
  return
    TAO::Narrow_Utils<alarmInterface>::narrow (
        _tao_objref,
        "IDL:alarms/alarmInterface:1.0",
        alarms__TAO_alarmInterface_Proxy_Broker_Factory_function_pointer
      );
}

alarms::alarmInterface_ptr
alarms::alarmInterface::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref
  )
{
  return
    TAO::Narrow_Utils<alarmInterface>::unchecked_narrow (
        _tao_objref,
        "IDL:alarms/alarmInterface:1.0",
        alarms__TAO_alarmInterface_Proxy_Broker_Factory_function_pointer
      );
}

alarms::alarmInterface_ptr
alarms::alarmInterface::_duplicate (alarmInterface_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void
alarms::alarmInterface::_tao_release (alarmInterface_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
alarms::alarmInterface::_is_a (const char *value)
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:alarms/alarmInterface:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* alarms::alarmInterface::_interface_repository_id (void) const
{
  return "IDL:alarms/alarmInterface:1.0";
}

::CORBA::Boolean
alarms::alarmInterface::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_alarms_alarmInterface (
    ::CORBA::tk_objref,
    "IDL:alarms/alarmInterface:1.0",
    "alarmInterface");
  
namespace alarms
{
  ::CORBA::TypeCode_ptr const _tc_alarmInterface =
    &_tao_tc_alarms_alarmInterface;
}



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

void operator<<= (
    ::CORBA::Any &_tao_any,
    alarms::Severity _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<alarms::Severity>::insert (
      _tao_any,
      alarms::_tc_Severity,
      _tao_elem
    );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    alarms::Severity &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<alarms::Severity>::extract (
        _tao_any,
        alarms::_tc_Severity,
        _tao_elem 
      );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// ../../../TAO/TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const alarms::AlarmNotification &_tao_elem
  )
{
  if (0 == &_tao_elem) // Trying to de-reference NULL object
    _tao_any <<= static_cast<alarms::AlarmNotification *>( 0 ); // Use non-copying insertion of a NULL
  else
    TAO::Any_Dual_Impl_T<alarms::AlarmNotification>::insert_copy (
        _tao_any,
        alarms::AlarmNotification::_tao_any_destructor,
        alarms::_tc_AlarmNotification,
        _tao_elem
      );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    alarms::AlarmNotification *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<alarms::AlarmNotification>::insert (
      _tao_any,
      alarms::AlarmNotification::_tao_any_destructor,
      alarms::_tc_AlarmNotification,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    alarms::AlarmNotification *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const alarms::AlarmNotification *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const alarms::AlarmNotification *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<alarms::AlarmNotification>::extract (
        _tao_any,
        alarms::AlarmNotification::_tao_any_destructor,
        alarms::_tc_AlarmNotification,
        _tao_elem
      );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// ../../../TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const alarms::AlarmNotificationSequence &_tao_elem
  )
{
  if (0 == &_tao_elem) // Trying to de-reference NULL object
    _tao_any <<= static_cast<alarms::AlarmNotificationSequence *>( 0 ); // Use non-copying insertion of a NULL
  else
    TAO::Any_Dual_Impl_T<alarms::AlarmNotificationSequence>::insert_copy (
        _tao_any,
        alarms::AlarmNotificationSequence::_tao_any_destructor,
        alarms::_tc_AlarmNotificationSequence,
        _tao_elem
      );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    alarms::AlarmNotificationSequence *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<alarms::AlarmNotificationSequence>::insert (
      _tao_any,
      alarms::AlarmNotificationSequence::_tao_any_destructor,
      alarms::_tc_AlarmNotificationSequence,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    alarms::AlarmNotificationSequence *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const alarms::AlarmNotificationSequence *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const alarms::AlarmNotificationSequence *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<alarms::AlarmNotificationSequence>::extract (
        _tao_any,
        alarms::AlarmNotificationSequence::_tao_any_destructor,
        alarms::_tc_AlarmNotificationSequence,
        _tao_elem
      );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

void operator<<= (
    ::CORBA::Any &_tao_any,
    alarms::AlarmCategory _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<alarms::AlarmCategory>::insert (
      _tao_any,
      alarms::_tc_AlarmCategory,
      _tao_elem
    );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    alarms::AlarmCategory &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<alarms::AlarmCategory>::extract (
        _tao_any,
        alarms::_tc_AlarmCategory,
        _tao_elem 
      );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// ../../../TAO/TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const alarms::AlarmInformation &_tao_elem
  )
{
  if (0 == &_tao_elem) // Trying to de-reference NULL object
    _tao_any <<= static_cast<alarms::AlarmInformation *>( 0 ); // Use non-copying insertion of a NULL
  else
    TAO::Any_Dual_Impl_T<alarms::AlarmInformation>::insert_copy (
        _tao_any,
        alarms::AlarmInformation::_tao_any_destructor,
        alarms::_tc_AlarmInformation,
        _tao_elem
      );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    alarms::AlarmInformation *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<alarms::AlarmInformation>::insert (
      _tao_any,
      alarms::AlarmInformation::_tao_any_destructor,
      alarms::_tc_AlarmInformation,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    alarms::AlarmInformation *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const alarms::AlarmInformation *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const alarms::AlarmInformation *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<alarms::AlarmInformation>::extract (
        _tao_any,
        alarms::AlarmInformation::_tao_any_destructor,
        alarms::_tc_AlarmInformation,
        _tao_elem
      );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// ../../../TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const alarms::AlarmInformationSequence &_tao_elem
  )
{
  if (0 == &_tao_elem) // Trying to de-reference NULL object
    _tao_any <<= static_cast<alarms::AlarmInformationSequence *>( 0 ); // Use non-copying insertion of a NULL
  else
    TAO::Any_Dual_Impl_T<alarms::AlarmInformationSequence>::insert_copy (
        _tao_any,
        alarms::AlarmInformationSequence::_tao_any_destructor,
        alarms::_tc_AlarmInformationSequence,
        _tao_elem
      );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    alarms::AlarmInformationSequence *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<alarms::AlarmInformationSequence>::insert (
      _tao_any,
      alarms::AlarmInformationSequence::_tao_any_destructor,
      alarms::_tc_AlarmInformationSequence,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    alarms::AlarmInformationSequence *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const alarms::AlarmInformationSequence *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const alarms::AlarmInformationSequence *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<alarms::AlarmInformationSequence>::extract (
        _tao_any,
        alarms::AlarmInformationSequence::_tao_any_destructor,
        alarms::_tc_AlarmInformationSequence,
        _tao_elem
      );
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:51
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<alarms::alarmInterface>::to_object (
      ::CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace alarms
{
  
  
  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      alarmInterface_ptr _tao_elem)
  {
    alarmInterface_ptr _tao_objptr =
      alarmInterface::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }
  
  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      alarmInterface_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<alarmInterface>::insert (
        _tao_any,
        alarmInterface::_tao_any_destructor,
        _tc_alarmInterface,
        *_tao_elem)
  }
  
  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      alarmInterface_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<alarmInterface>::extract (
          _tao_any,
          alarmInterface::_tao_any_destructor,
          _tc_alarmInterface,
          _tao_elem)
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    alarms::alarmInterface_ptr _tao_elem)
{
  alarms::alarmInterface_ptr _tao_objptr =
    alarms::alarmInterface::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    alarms::alarmInterface_ptr *_tao_elem)
{
  TAO::Any_Impl_T<alarms::alarmInterface>::insert (
      _tao_any,
      alarms::alarmInterface::_tao_any_destructor,
      alarms::_tc_alarmInterface,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    alarms::alarmInterface_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<alarms::alarmInterface>::extract (
        _tao_any,
        alarms::alarmInterface::_tao_any_destructor,
        alarms::_tc_alarmInterface,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:51


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (TAO_OutputCDR &strm, alarms::Severity _tao_enumerator)
{
  return strm << static_cast< ::CORBA::ULong> (_tao_enumerator);
}

::CORBA::Boolean operator>> (TAO_InputCDR &strm, alarms::Severity & _tao_enumerator)
{
  ::CORBA::ULong _tao_temp = 0;
  ::CORBA::Boolean const _tao_success = strm >> _tao_temp;
  
  if (_tao_success)
    {
      _tao_enumerator = static_cast<alarms::Severity> (_tao_temp);
    }
  
  return _tao_success;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:61


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const alarms::AlarmNotification &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.neid.in ()) &&
    (strm << _tao_aggregate.code) &&
    (strm << _tao_aggregate.mObject) &&
    (strm << _tao_aggregate.mObjectInstance) &&
    (strm << _tao_aggregate.sev) &&
    (strm << _tao_aggregate.tStamp.in ()) &&
    (strm << _tao_aggregate.ack.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    alarms::AlarmNotification &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.neid.out ()) &&
    (strm >> _tao_aggregate.code) &&
    (strm >> _tao_aggregate.mObject) &&
    (strm >> _tao_aggregate.mObjectInstance) &&
    (strm >> _tao_aggregate.sev) &&
    (strm >> _tao_aggregate.tStamp.out ()) &&
    (strm >> _tao_aggregate.ack.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_alarms_AlarmNotificationSequence_CPP_
#define _TAO_CDR_OP_alarms_AlarmNotificationSequence_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const alarms::AlarmNotificationSequence &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    alarms::AlarmNotificationSequence &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_alarms_AlarmNotificationSequence_CPP_ */

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:51


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (TAO_OutputCDR &strm, alarms::AlarmCategory _tao_enumerator)
{
  return strm << static_cast< ::CORBA::ULong> (_tao_enumerator);
}

::CORBA::Boolean operator>> (TAO_InputCDR &strm, alarms::AlarmCategory & _tao_enumerator)
{
  ::CORBA::ULong _tao_temp = 0;
  ::CORBA::Boolean const _tao_success = strm >> _tao_temp;
  
  if (_tao_success)
    {
      _tao_enumerator = static_cast<alarms::AlarmCategory> (_tao_temp);
    }
  
  return _tao_success;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:61


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const alarms::AlarmInformation &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.code) &&
    (strm << _tao_aggregate.aCategory) &&
    (strm << _tao_aggregate.hWaterMark) &&
    (strm << _tao_aggregate.lWaterMark) &&
    (strm << _tao_aggregate.sev) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.autoClearing)) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.filterEnabled)) &&
    (strm << _tao_aggregate.desc.in ()) &&
    (strm << _tao_aggregate.res.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    alarms::AlarmInformation &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.code) &&
    (strm >> _tao_aggregate.aCategory) &&
    (strm >> _tao_aggregate.hWaterMark) &&
    (strm >> _tao_aggregate.lWaterMark) &&
    (strm >> _tao_aggregate.sev) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.autoClearing)) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.filterEnabled)) &&
    (strm >> _tao_aggregate.desc.out ()) &&
    (strm >> _tao_aggregate.res.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_alarms_AlarmInformationSequence_CPP_
#define _TAO_CDR_OP_alarms_AlarmInformationSequence_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const alarms::AlarmInformationSequence &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    alarms::AlarmInformationSequence &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_alarms_AlarmInformationSequence_CPP_ */

// TAO_IDL - Generated from
// ../../../TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:63

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const alarms::alarmInterface_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    alarms::alarmInterface_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::alarms::alarmInterface RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        alarms__TAO_alarmInterface_Proxy_Broker_Factory_function_pointer
      );
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



